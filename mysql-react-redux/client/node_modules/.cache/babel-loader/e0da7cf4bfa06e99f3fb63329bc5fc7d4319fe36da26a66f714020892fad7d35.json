{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { allGuidesAsync } from \"./guideAPI\";\n;\nconst initialState = {\n  guides: [],\n  status: 'idle'\n};\nconst allGuidesSlice = createSlice({\n  name: 'allGuides',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(allGuidesAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(allGuidesAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      const {\n        guides\n      } = action.payload;\n      state.guides = guides;\n    }).addCase(allGuidesAsync.rejected, state => {\n      state.status = 'failed';\n    });\n  }\n});\nexport default allGuidesSlice.reducer;\nexport const selectedAllGuides = state => state.allGuides.guides;\nexport const selectedAllStatus = state;","map":{"version":3,"names":["createSlice","allGuidesAsync","initialState","guides","status","allGuidesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer","selectedAllGuides","allGuides","selectedAllStatus"],"sources":["C:/Users/user/OneDrive/שולחן העבודה/hanoch/fullstack-2021dec-node/03-SQL/99-SQL Project/hanoch/client/src/features/guides/allGuidesSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState, AppThunk } from \"../../app/store\";\r\nimport { allGuidesAsync } from \"./guideAPI\";\r\nimport { GuideDetails } from \"./guideSlice\";\r\n\r\nexport interface AllGuides{\r\n    guides: GuideDetails[],\r\n    status: \"idle\" | \"loading\" | \"failed\",\r\n};\r\n\r\nconst initialState:AllGuides = {\r\n    guides: [],\r\n    status: 'idle',\r\n}\r\n\r\nconst allGuidesSlice = createSlice({\r\n    name: 'allGuides',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(allGuidesAsync.pending, (state) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(allGuidesAsync.fulfilled, (state, action) => {\r\n                state.status = 'idle'\r\n                const {guides} = action.payload\r\n                state.guides = guides\r\n            })\r\n            .addCase(allGuidesAsync.rejected, (state) => {\r\n                state.status = 'failed'\r\n            })\r\n    }\r\n});\r\n\r\nexport default allGuidesSlice.reducer\r\nexport const selectedAllGuides = (state: RootState) => state.allGuides.guides\r\nexport const selectedAllStatus = (state)"],"mappings":"AAAA,SAA2BA,WAAW,QAAuB,kBAAkB;AAE/E,SAASC,cAAc,QAAQ,YAAY;AAM1C;AAED,MAAMC,YAAsB,GAAG;EAC3BC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,cAAc,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,WAAW;EACjBJ,YAAY;EACZK,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACT,cAAc,CAACU,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAACR,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDM,OAAO,CAACT,cAAc,CAACY,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACR,MAAM,GAAG,MAAM;MACrB,MAAM;QAACD;MAAM,CAAC,GAAGW,MAAM,CAACC,OAAO;MAC/BH,KAAK,CAACT,MAAM,GAAGA,MAAM;IACzB,CAAC,CAAC,CACDO,OAAO,CAACT,cAAc,CAACe,QAAQ,EAAGJ,KAAK,IAAK;MACzCA,KAAK,CAACR,MAAM,GAAG,QAAQ;IAC3B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeC,cAAc,CAACY,OAAO;AACrC,OAAO,MAAMC,iBAAiB,GAAIN,KAAgB,IAAKA,KAAK,CAACO,SAAS,CAAChB,MAAM;AAC7E,OAAO,MAAMiB,iBAAiB,GAAIR,KAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}