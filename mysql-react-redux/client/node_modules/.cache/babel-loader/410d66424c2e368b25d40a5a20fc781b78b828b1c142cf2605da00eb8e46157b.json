{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { addGuid } from \"./guideAPI\";\n;\nconst initialState = {\n  guides: null,\n  status: 'idle'\n};\nconst guideSlice = createSlice({\n  name: \"guides\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(addGuid.pending, state => {\n      state.status = 'loading';\n    }).addCase(addGuid.fulfilled, (state, action) => {\n      state.status = 'idle';\n      const {\n        guide\n      } = action.payload;\n      state.guides = guide;\n    }).addCase(addGuid.rejected, state => {\n      state.status = 'failed';\n    });\n  }\n});\nexport const selectedGuid = state => state.guides.guides;\nexport const selectedGuidStatus = state => state.guides.status;\nexport default guideSlice.reducer;","map":{"version":3,"names":["createSlice","addGuid","initialState","guides","status","guideSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","guide","payload","rejected","selectedGuid","selectedGuidStatus","reducer"],"sources":["C:/Users/user/OneDrive/שולחן העבודה/hanoch/fullstack-2021dec-node/03-SQL/99-SQL Project/hanoch/client/src/features/guides/guideSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState, AppThunk } from \"../../app/store\";\r\nimport { addGuid } from \"./guideAPI\";\r\n\r\nexport interface GuideDetails{\r\n    fullName: string,\r\n    country: string,\r\n    city: string,\r\n    telephon: string,\r\n    email: string, \r\n    image: any,\r\n}\r\n\r\nexport interface GuideState{\r\n    guides: GuideDetails | null,\r\n    status: \"idle\" | \"loading\" | \"failed\",\r\n};\r\n\r\nconst initialState: GuideState = {\r\n    guides: null,\r\n    status: 'idle',\r\n  };\r\n\r\n const guideSlice = createSlice({\r\n    name: \"guides\",\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(addGuid.pending, (state) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(addGuid.fulfilled, (state, action: PayloadAction<any>) => {\r\n                state.status = 'idle'\r\n                const {guide} = action.payload\r\n                state.guides = guide\r\n            })\r\n            .addCase(addGuid.rejected, (state) => {\r\n                state.status = 'failed';\r\n            });\r\n    },\r\n})\r\n\r\nexport const selectedGuid = (state: RootState) => state.guides.guides;\r\nexport const selectedGuidStatus = (state: RootState) => state.guides.status;\r\nexport default guideSlice.reducer\r\n\r\n"],"mappings":"AAAA,SAA2BA,WAAW,QAAuB,kBAAkB;AAE/E,SAASC,OAAO,QAAQ,YAAY;AAcnC;AAED,MAAMC,YAAwB,GAAG;EAC7BC,MAAM,EAAE,IAAI;EACZC,MAAM,EAAE;AACV,CAAC;AAEF,MAAMC,UAAU,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,QAAQ;EACdJ,YAAY;EACZK,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACT,OAAO,CAACU,OAAO,EAAGC,KAAK,IAAK;MACjCA,KAAK,CAACR,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDM,OAAO,CAACT,OAAO,CAACY,SAAS,EAAE,CAACD,KAAK,EAAEE,MAA0B,KAAK;MAC/DF,KAAK,CAACR,MAAM,GAAG,MAAM;MACrB,MAAM;QAACW;MAAK,CAAC,GAAGD,MAAM,CAACE,OAAO;MAC9BJ,KAAK,CAACT,MAAM,GAAGY,KAAK;IACxB,CAAC,CAAC,CACDL,OAAO,CAACT,OAAO,CAACgB,QAAQ,EAAGL,KAAK,IAAK;MAClCA,KAAK,CAACR,MAAM,GAAG,QAAQ;IAC3B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMc,YAAY,GAAIN,KAAgB,IAAKA,KAAK,CAACT,MAAM,CAACA,MAAM;AACrE,OAAO,MAAMgB,kBAAkB,GAAIP,KAAgB,IAAKA,KAAK,CAACT,MAAM,CAACC,MAAM;AAC3E,eAAeC,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}