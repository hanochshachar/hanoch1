{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\hanoch\\\\fullstack-2021dec-node\\\\03-SQL\\\\99-SQL Project\\\\hanoch\\\\client\\\\src\\\\features\\\\components\\\\rendering\\\\GuideByFilter.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\nimport { selectedFilterStatus, selectedGuidFilter } from '../../guides/filterSlice';\nimport { guidesByFilterAsync } from '../../guides/guideAPI';\nimport { GuidesCard } from './GuidesCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GuideByFilter = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const country = React.useRef();\n  const city = React.useRef();\n  function handleSearch(ev) {\n    ev.preventDefault();\n    try {\n      // let {country, city } = ev.target.elements;\n      // country = country.value;\n      // city = city.value;\n      dispatch(guidesByFilterAsync({\n        country,\n        city\n      }));\n      console.log(country, city);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  ;\n  // useEffect(() => {\n  //   handleSearch()  \n  // },[handleSearch()])\n  const filterSelector = useAppSelector(selectedGuidFilter);\n  const statusSelector = useAppSelector(selectedFilterStatus);\n  console.log(filterSelector);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"country\",\n        ref: country,\n        placeholder: \"country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        ref: city,\n        placeholder: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), filterSelector !== [{}] && filterSelector.map(filGuide => {\n      return /*#__PURE__*/_jsxDEV(GuidesCard, {\n        fullName: filGuide.fullName,\n        country: filGuide.country,\n        city: filGuide.city,\n        telephon: filGuide.telephon,\n        email: filGuide.email,\n        image: filGuide.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(GuideByFilter, \"t1Mn7wHwoOw4iKLcJJmUZtXkmXE=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n_c = GuideByFilter;\nvar _c;\n$RefreshReg$(_c, \"GuideByFilter\");","map":{"version":3,"names":["React","useAppDispatch","useAppSelector","selectedFilterStatus","selectedGuidFilter","guidesByFilterAsync","GuidesCard","GuideByFilter","dispatch","country","useRef","city","handleSearch","ev","preventDefault","console","log","error","filterSelector","statusSelector","map","filGuide","fullName","telephon","email","image"],"sources":["C:/Users/user/OneDrive/שולחן העבודה/hanoch/fullstack-2021dec-node/03-SQL/99-SQL Project/hanoch/client/src/features/components/rendering/GuideByFilter.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks'\r\nimport { selectedFilterStatus, selectedGuidFilter } from '../../guides/filterSlice'\r\nimport { guidesByFilterAsync } from '../../guides/guideAPI';\r\nimport { GuideDetails } from '../../guides/guideSlice';\r\nimport { GuidesCard } from './GuidesCard';\r\n\r\nexport const GuideByFilter = () => {\r\n  const dispatch = useAppDispatch()\r\n  const country = React.useRef<any>()\r\n  const city = React.useRef<any>()\r\n  function handleSearch(ev:any){\r\n    ev.preventDefault()\r\n    try {\r\n      // let {country, city } = ev.target.elements;\r\n      // country = country.value;\r\n      // city = city.value;\r\n      dispatch(guidesByFilterAsync({country, city }))\r\n      \r\n      console.log(country, city);\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n      \r\n    }\r\n  };\r\n  // useEffect(() => {\r\n  //   handleSearch()  \r\n  // },[handleSearch()])\r\n  const filterSelector = useAppSelector(selectedGuidFilter);\r\n  const statusSelector = useAppSelector(selectedFilterStatus);\r\n  \r\n  console.log(filterSelector);\r\n  \r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSearch}>\r\n        <input type=\"text\" name='country' ref={country} placeholder='country'/>\r\n        <input type=\"text\" name='city' ref={city} placeholder='city' />\r\n        <input type=\"submit\" value=\"search\" />\r\n      </form>\r\n      {filterSelector !== [{}] &&  filterSelector.map((filGuide: any) => {\r\n        return (\r\n          <GuidesCard fullName={filGuide.fullName}\r\n                        country={filGuide.country}\r\n                        city={filGuide.city}\r\n                        telephon={filGuide.telephon}\r\n                        email={filGuide.email}\r\n                        image={filGuide.image}/>\r\n          )\r\n        })}\r\n        \r\n    \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAA6B,OAAO;AAChD,SAASC,cAAc,EAAEC,cAAc,QAAQ,oBAAoB;AACnE,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,0BAA0B;AACnF,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D,SAASC,UAAU,QAAQ,cAAc;AAAC;AAE1C,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;EACjC,MAAMC,QAAQ,GAAGP,cAAc,EAAE;EACjC,MAAMQ,OAAO,GAAGT,KAAK,CAACU,MAAM,EAAO;EACnC,MAAMC,IAAI,GAAGX,KAAK,CAACU,MAAM,EAAO;EAChC,SAASE,YAAY,CAACC,EAAM,EAAC;IAC3BA,EAAE,CAACC,cAAc,EAAE;IACnB,IAAI;MACF;MACA;MACA;MACAN,QAAQ,CAACH,mBAAmB,CAAC;QAACI,OAAO;QAAEE;MAAK,CAAC,CAAC,CAAC;MAE/CI,OAAO,CAACC,GAAG,CAACP,OAAO,EAAEE,IAAI,CAAC;IAE5B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAEpB;EACF;EAAC;EACD;EACA;EACA;EACA,MAAMC,cAAc,GAAGhB,cAAc,CAACE,kBAAkB,CAAC;EACzD,MAAMe,cAAc,GAAGjB,cAAc,CAACC,oBAAoB,CAAC;EAE3DY,OAAO,CAACC,GAAG,CAACE,cAAc,CAAC;EAE3B,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAEN,YAAa;MAAA,wBAC3B;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,SAAS;QAAC,GAAG,EAAEH,OAAQ;QAAC,WAAW,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE,eACvE;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,GAAG,EAAEE,IAAK;QAAC,WAAW,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/D;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC,EACNO,cAAc,KAAK,CAAC,CAAC,CAAC,CAAC,IAAKA,cAAc,CAACE,GAAG,CAAEC,QAAa,IAAK;MACjE,oBACE,QAAC,UAAU;QAAC,QAAQ,EAAEA,QAAQ,CAACC,QAAS;QAC1B,OAAO,EAAED,QAAQ,CAACZ,OAAQ;QAC1B,IAAI,EAAEY,QAAQ,CAACV,IAAK;QACpB,QAAQ,EAAEU,QAAQ,CAACE,QAAS;QAC5B,KAAK,EAAEF,QAAQ,CAACG,KAAM;QACtB,KAAK,EAAEH,QAAQ,CAACI;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE;IAExC,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAGA;AAEV,CAAC;AAAA,GAhDYlB,aAAa;EAAA,QACPN,cAAc,EAqBRC,cAAc,EACdA,cAAc;AAAA;AAAA,KAvB1BK,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}