{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { AddCostumerAsync } from \"./costumerAPI\";\n;\n;\nconst initialState = {\n  costumer: null,\n  status: \"idle\"\n};\nconst costumerSlice = createSlice({\n  name: 'costumers',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(AddCostumerAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(AddCostumerAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      const {\n        costumer\n      } = action.payload;\n      state.costumer = costumer;\n    }).addCase(AddCostumerAsync.rejected, state => {\n      state.status = 'failed';\n    });\n  }\n});\nexport default costumerSlice.reducer;\nexport const selectedCostumer = state => state.costumers.costumer;\nexport const selectedCostumerStatus = state => state.costumers.status;","map":{"version":3,"names":["createSlice","AddCostumerAsync","initialState","costumer","status","costumerSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer","selectedCostumer","costumers","selectedCostumerStatus"],"sources":["C:/Users/user/OneDrive/שולחן העבודה/hanoch/fullstack-2021dec-node/03-SQL/99-SQL Project/hanoch/client/src/features/costumers/costumerSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { AddCostumerAsync } from \"./costumerAPI\";\r\n\r\n\r\nexport interface CostumerDetails{\r\n    fullname: string,\r\n    telephon: string,\r\n    email: string,\r\n    password: string\r\n};\r\n\r\nexport interface CostumerState{\r\n    costumer: CostumerDetails | null,\r\n    status: \"idle\" | \"loading\" | \"failed\",\r\n};\r\n\r\nconst initialState: CostumerState = {\r\n    costumer: null,\r\n    status: \"idle\"\r\n};\r\n\r\nconst costumerSlice = createSlice({\r\n    name: 'costumers',\r\n    initialState,\r\n    reducers:{},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(AddCostumerAsync.pending, (state) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(AddCostumerAsync.fulfilled, (state, action: PayloadAction<any>) => {\r\n                state.status = 'idle'\r\n                const {costumer} = action.payload;\r\n                state.costumer = costumer\r\n            })\r\n            .addCase(AddCostumerAsync.rejected, (state) => {\r\n                state.status = 'failed'\r\n            })\r\n    }\r\n});\r\n\r\nexport default costumerSlice.reducer;\r\nexport const selectedCostumer = (state: RootState) => state.costumers.costumer;\r\nexport const selectedCostumerStatus = (state: RootState) => state.costumers.status;\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAE7D,SAASC,gBAAgB,QAAQ,eAAe;AAQ/C;AAKA;AAED,MAAMC,YAA2B,GAAG;EAChCC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,aAAa,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAE,WAAW;EACjBJ,YAAY;EACZK,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACT,gBAAgB,CAACU,OAAO,EAAGC,KAAK,IAAK;MAC1CA,KAAK,CAACR,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDM,OAAO,CAACT,gBAAgB,CAACY,SAAS,EAAE,CAACD,KAAK,EAAEE,MAA0B,KAAK;MACxEF,KAAK,CAACR,MAAM,GAAG,MAAM;MACrB,MAAM;QAACD;MAAQ,CAAC,GAAGW,MAAM,CAACC,OAAO;MACjCH,KAAK,CAACT,QAAQ,GAAGA,QAAQ;IAC7B,CAAC,CAAC,CACDO,OAAO,CAACT,gBAAgB,CAACe,QAAQ,EAAGJ,KAAK,IAAK;MAC3CA,KAAK,CAACR,MAAM,GAAG,QAAQ;IAC3B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeC,aAAa,CAACY,OAAO;AACpC,OAAO,MAAMC,gBAAgB,GAAIN,KAAgB,IAAKA,KAAK,CAACO,SAAS,CAAChB,QAAQ;AAC9E,OAAO,MAAMiB,sBAAsB,GAAIR,KAAgB,IAAKA,KAAK,CAACO,SAAS,CAACf,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}